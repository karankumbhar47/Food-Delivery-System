/**
 * FDS
 * This API allows to communicate with FDS (Food Delivery System) server. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package deliveryApp.model;

import com.google.gson.annotations.SerializedName;

import java.util.List;

import io.swagger.annotations.*;

@ApiModel(description = "")
public class VendorAddProductImagesRequest {
  
  @SerializedName("itemId")
  private String itemId = null;
  @SerializedName("imageUrls")
  private List<String> imageUrls = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getItemId() {
    return itemId;
  }
  public void setItemId(String itemId) {
    this.itemId = itemId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getImageUrls() {
    return imageUrls;
  }
  public void setImageUrls(List<String> imageUrls) {
    this.imageUrls = imageUrls;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VendorAddProductImagesRequest vendorAddProductImagesRequest = (VendorAddProductImagesRequest) o;
    return (this.itemId == null ? vendorAddProductImagesRequest.itemId == null : this.itemId.equals(vendorAddProductImagesRequest.itemId)) &&
        (this.imageUrls == null ? vendorAddProductImagesRequest.imageUrls == null : this.imageUrls.equals(vendorAddProductImagesRequest.imageUrls));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.itemId == null ? 0: this.itemId.hashCode());
    result = 31 * result + (this.imageUrls == null ? 0: this.imageUrls.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class VendorAddProductImagesRequest {\n");
    
    sb.append("  itemId: ").append(itemId).append("\n");
    sb.append("  imageUrls: ").append(imageUrls).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
