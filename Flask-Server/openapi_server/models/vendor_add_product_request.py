from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class VendorAddProductRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, thumbnail=None, price=None, max_quantity=None, image_urls=None):  # noqa: E501
        """VendorAddProductRequest - a model defined in OpenAPI

        :param name: The name of this VendorAddProductRequest.  # noqa: E501
        :type name: str
        :param thumbnail: The thumbnail of this VendorAddProductRequest.  # noqa: E501
        :type thumbnail: str
        :param price: The price of this VendorAddProductRequest.  # noqa: E501
        :type price: float
        :param max_quantity: The max_quantity of this VendorAddProductRequest.  # noqa: E501
        :type max_quantity: float
        :param image_urls: The image_urls of this VendorAddProductRequest.  # noqa: E501
        :type image_urls: List[str]
        """
        self.openapi_types = {
            'name': str,
            'thumbnail': str,
            'price': float,
            'max_quantity': float,
            'image_urls': List[str]
        }

        self.attribute_map = {
            'name': 'name',
            'thumbnail': 'thumbnail',
            'price': 'price',
            'max_quantity': 'maxQuantity',
            'image_urls': 'imageUrls'
        }

        self._name = name
        self._thumbnail = thumbnail
        self._price = price
        self._max_quantity = max_quantity
        self._image_urls = image_urls

    @classmethod
    def from_dict(cls, dikt) -> 'VendorAddProductRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The vendorAddProduct_request of this VendorAddProductRequest.  # noqa: E501
        :rtype: VendorAddProductRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this VendorAddProductRequest.


        :return: The name of this VendorAddProductRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this VendorAddProductRequest.


        :param name: The name of this VendorAddProductRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def thumbnail(self) -> str:
        """Gets the thumbnail of this VendorAddProductRequest.


        :return: The thumbnail of this VendorAddProductRequest.
        :rtype: str
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail: str):
        """Sets the thumbnail of this VendorAddProductRequest.


        :param thumbnail: The thumbnail of this VendorAddProductRequest.
        :type thumbnail: str
        """

        self._thumbnail = thumbnail

    @property
    def price(self) -> float:
        """Gets the price of this VendorAddProductRequest.


        :return: The price of this VendorAddProductRequest.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this VendorAddProductRequest.


        :param price: The price of this VendorAddProductRequest.
        :type price: float
        """
        if price is None:
            raise ValueError("Invalid value for `price`, must not be `None`")  # noqa: E501

        self._price = price

    @property
    def max_quantity(self) -> float:
        """Gets the max_quantity of this VendorAddProductRequest.


        :return: The max_quantity of this VendorAddProductRequest.
        :rtype: float
        """
        return self._max_quantity

    @max_quantity.setter
    def max_quantity(self, max_quantity: float):
        """Sets the max_quantity of this VendorAddProductRequest.


        :param max_quantity: The max_quantity of this VendorAddProductRequest.
        :type max_quantity: float
        """

        self._max_quantity = max_quantity

    @property
    def image_urls(self) -> List[str]:
        """Gets the image_urls of this VendorAddProductRequest.


        :return: The image_urls of this VendorAddProductRequest.
        :rtype: List[str]
        """
        return self._image_urls

    @image_urls.setter
    def image_urls(self, image_urls: List[str]):
        """Sets the image_urls of this VendorAddProductRequest.


        :param image_urls: The image_urls of this VendorAddProductRequest.
        :type image_urls: List[str]
        """

        self._image_urls = image_urls
