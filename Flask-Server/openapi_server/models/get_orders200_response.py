from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.vendor_get_requested_orders200_response_inner_order_items_inner import VendorGetRequestedOrders200ResponseInnerOrderItemsInner
from openapi_server import util

from openapi_server.models.vendor_get_requested_orders200_response_inner_order_items_inner import VendorGetRequestedOrders200ResponseInnerOrderItemsInner  # noqa: E501

class GetOrders200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_id=None, user_id=None, vendor_id=None, pickup_location=None, order_items=None, location=None, price=None, status=None):  # noqa: E501
        """GetOrders200Response - a model defined in OpenAPI

        :param order_id: The order_id of this GetOrders200Response.  # noqa: E501
        :type order_id: str
        :param user_id: The user_id of this GetOrders200Response.  # noqa: E501
        :type user_id: str
        :param vendor_id: The vendor_id of this GetOrders200Response.  # noqa: E501
        :type vendor_id: str
        :param pickup_location: The pickup_location of this GetOrders200Response.  # noqa: E501
        :type pickup_location: str
        :param order_items: The order_items of this GetOrders200Response.  # noqa: E501
        :type order_items: List[VendorGetRequestedOrders200ResponseInnerOrderItemsInner]
        :param location: The location of this GetOrders200Response.  # noqa: E501
        :type location: str
        :param price: The price of this GetOrders200Response.  # noqa: E501
        :type price: float
        :param status: The status of this GetOrders200Response.  # noqa: E501
        :type status: str
        """
        self.openapi_types = {
            'order_id': str,
            'user_id': str,
            'vendor_id': str,
            'pickup_location': str,
            'order_items': List[VendorGetRequestedOrders200ResponseInnerOrderItemsInner],
            'location': str,
            'price': float,
            'status': str
        }

        self.attribute_map = {
            'order_id': 'orderId',
            'user_id': 'userId',
            'vendor_id': 'vendorID',
            'pickup_location': 'pickupLocation',
            'order_items': 'orderItems',
            'location': 'location',
            'price': 'price',
            'status': 'status'
        }

        self._order_id = order_id
        self._user_id = user_id
        self._vendor_id = vendor_id
        self._pickup_location = pickup_location
        self._order_items = order_items
        self._location = location
        self._price = price
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'GetOrders200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The getOrders_200_response of this GetOrders200Response.  # noqa: E501
        :rtype: GetOrders200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_id(self) -> str:
        """Gets the order_id of this GetOrders200Response.


        :return: The order_id of this GetOrders200Response.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id: str):
        """Sets the order_id of this GetOrders200Response.


        :param order_id: The order_id of this GetOrders200Response.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def user_id(self) -> str:
        """Gets the user_id of this GetOrders200Response.


        :return: The user_id of this GetOrders200Response.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this GetOrders200Response.


        :param user_id: The user_id of this GetOrders200Response.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def vendor_id(self) -> str:
        """Gets the vendor_id of this GetOrders200Response.


        :return: The vendor_id of this GetOrders200Response.
        :rtype: str
        """
        return self._vendor_id

    @vendor_id.setter
    def vendor_id(self, vendor_id: str):
        """Sets the vendor_id of this GetOrders200Response.


        :param vendor_id: The vendor_id of this GetOrders200Response.
        :type vendor_id: str
        """

        self._vendor_id = vendor_id

    @property
    def pickup_location(self) -> str:
        """Gets the pickup_location of this GetOrders200Response.


        :return: The pickup_location of this GetOrders200Response.
        :rtype: str
        """
        return self._pickup_location

    @pickup_location.setter
    def pickup_location(self, pickup_location: str):
        """Sets the pickup_location of this GetOrders200Response.


        :param pickup_location: The pickup_location of this GetOrders200Response.
        :type pickup_location: str
        """

        self._pickup_location = pickup_location

    @property
    def order_items(self) -> List[VendorGetRequestedOrders200ResponseInnerOrderItemsInner]:
        """Gets the order_items of this GetOrders200Response.


        :return: The order_items of this GetOrders200Response.
        :rtype: List[VendorGetRequestedOrders200ResponseInnerOrderItemsInner]
        """
        return self._order_items

    @order_items.setter
    def order_items(self, order_items: List[VendorGetRequestedOrders200ResponseInnerOrderItemsInner]):
        """Sets the order_items of this GetOrders200Response.


        :param order_items: The order_items of this GetOrders200Response.
        :type order_items: List[VendorGetRequestedOrders200ResponseInnerOrderItemsInner]
        """

        self._order_items = order_items

    @property
    def location(self) -> str:
        """Gets the location of this GetOrders200Response.

        Delivery location.  # noqa: E501

        :return: The location of this GetOrders200Response.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location: str):
        """Sets the location of this GetOrders200Response.

        Delivery location.  # noqa: E501

        :param location: The location of this GetOrders200Response.
        :type location: str
        """

        self._location = location

    @property
    def price(self) -> float:
        """Gets the price of this GetOrders200Response.


        :return: The price of this GetOrders200Response.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this GetOrders200Response.


        :param price: The price of this GetOrders200Response.
        :type price: float
        """

        self._price = price

    @property
    def status(self) -> str:
        """Gets the status of this GetOrders200Response.


        :return: The status of this GetOrders200Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this GetOrders200Response.


        :param status: The status of this GetOrders200Response.
        :type status: str
        """

        self._status = status
