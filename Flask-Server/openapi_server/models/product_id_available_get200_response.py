from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductIdAvailableGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_available=None):  # noqa: E501
        """ProductIdAvailableGet200Response - a model defined in OpenAPI

        :param is_available: The is_available of this ProductIdAvailableGet200Response.  # noqa: E501
        :type is_available: bool
        """
        self.openapi_types = {
            'is_available': bool
        }

        self.attribute_map = {
            'is_available': 'isAvailable'
        }

        self._is_available = is_available

    @classmethod
    def from_dict(cls, dikt) -> 'ProductIdAvailableGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _product__id__available_get_200_response of this ProductIdAvailableGet200Response.  # noqa: E501
        :rtype: ProductIdAvailableGet200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_available(self) -> bool:
        """Gets the is_available of this ProductIdAvailableGet200Response.

        Indicates if the specified quantity is available  # noqa: E501

        :return: The is_available of this ProductIdAvailableGet200Response.
        :rtype: bool
        """
        return self._is_available

    @is_available.setter
    def is_available(self, is_available: bool):
        """Sets the is_available of this ProductIdAvailableGet200Response.

        Indicates if the specified quantity is available  # noqa: E501

        :param is_available: The is_available of this ProductIdAvailableGet200Response.
        :type is_available: bool
        """

        self._is_available = is_available
