from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.order_item import OrderItem
from openapi_server import util

from openapi_server.models.order_item import OrderItem  # noqa: E501

class Order(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_id=None, customer_name=None, delivery_address=None, pickup_location=None, order_details=None):  # noqa: E501
        """Order - a model defined in OpenAPI

        :param order_id: The order_id of this Order.  # noqa: E501
        :type order_id: str
        :param customer_name: The customer_name of this Order.  # noqa: E501
        :type customer_name: str
        :param delivery_address: The delivery_address of this Order.  # noqa: E501
        :type delivery_address: str
        :param pickup_location: The pickup_location of this Order.  # noqa: E501
        :type pickup_location: str
        :param order_details: The order_details of this Order.  # noqa: E501
        :type order_details: List[OrderItem]
        """
        self.openapi_types = {
            'order_id': str,
            'customer_name': str,
            'delivery_address': str,
            'pickup_location': str,
            'order_details': List[OrderItem]
        }

        self.attribute_map = {
            'order_id': 'orderId',
            'customer_name': 'customerName',
            'delivery_address': 'deliveryAddress',
            'pickup_location': 'pickupLocation',
            'order_details': 'orderDetails'
        }

        self._order_id = order_id
        self._customer_name = customer_name
        self._delivery_address = delivery_address
        self._pickup_location = pickup_location
        self._order_details = order_details

    @classmethod
    def from_dict(cls, dikt) -> 'Order':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The order of this Order.  # noqa: E501
        :rtype: Order
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_id(self) -> str:
        """Gets the order_id of this Order.


        :return: The order_id of this Order.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id: str):
        """Sets the order_id of this Order.


        :param order_id: The order_id of this Order.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def customer_name(self) -> str:
        """Gets the customer_name of this Order.


        :return: The customer_name of this Order.
        :rtype: str
        """
        return self._customer_name

    @customer_name.setter
    def customer_name(self, customer_name: str):
        """Sets the customer_name of this Order.


        :param customer_name: The customer_name of this Order.
        :type customer_name: str
        """

        self._customer_name = customer_name

    @property
    def delivery_address(self) -> str:
        """Gets the delivery_address of this Order.


        :return: The delivery_address of this Order.
        :rtype: str
        """
        return self._delivery_address

    @delivery_address.setter
    def delivery_address(self, delivery_address: str):
        """Sets the delivery_address of this Order.


        :param delivery_address: The delivery_address of this Order.
        :type delivery_address: str
        """

        self._delivery_address = delivery_address

    @property
    def pickup_location(self) -> str:
        """Gets the pickup_location of this Order.


        :return: The pickup_location of this Order.
        :rtype: str
        """
        return self._pickup_location

    @pickup_location.setter
    def pickup_location(self, pickup_location: str):
        """Sets the pickup_location of this Order.


        :param pickup_location: The pickup_location of this Order.
        :type pickup_location: str
        """

        self._pickup_location = pickup_location

    @property
    def order_details(self) -> List[OrderItem]:
        """Gets the order_details of this Order.


        :return: The order_details of this Order.
        :rtype: List[OrderItem]
        """
        return self._order_details

    @order_details.setter
    def order_details(self, order_details: List[OrderItem]):
        """Sets the order_details of this Order.


        :param order_details: The order_details of this Order.
        :type order_details: List[OrderItem]
        """

        self._order_details = order_details
