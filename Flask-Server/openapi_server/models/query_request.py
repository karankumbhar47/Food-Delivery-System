from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.filter import Filter
from openapi_server import util

from openapi_server.models.filter import Filter  # noqa: E501

class QueryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query=None, filters=None):  # noqa: E501
        """QueryRequest - a model defined in OpenAPI

        :param query: The query of this QueryRequest.  # noqa: E501
        :type query: str
        :param filters: The filters of this QueryRequest.  # noqa: E501
        :type filters: List[Filter]
        """
        self.openapi_types = {
            'query': str,
            'filters': List[Filter]
        }

        self.attribute_map = {
            'query': 'query',
            'filters': 'filters'
        }

        self._query = query
        self._filters = filters

    @classmethod
    def from_dict(cls, dikt) -> 'QueryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The query_request of this QueryRequest.  # noqa: E501
        :rtype: QueryRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query(self) -> str:
        """Gets the query of this QueryRequest.

        Can be empty  # noqa: E501

        :return: The query of this QueryRequest.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query: str):
        """Sets the query of this QueryRequest.

        Can be empty  # noqa: E501

        :param query: The query of this QueryRequest.
        :type query: str
        """

        self._query = query

    @property
    def filters(self) -> List[Filter]:
        """Gets the filters of this QueryRequest.


        :return: The filters of this QueryRequest.
        :rtype: List[Filter]
        """
        return self._filters

    @filters.setter
    def filters(self, filters: List[Filter]):
        """Sets the filters of this QueryRequest.


        :param filters: The filters of this QueryRequest.
        :type filters: List[Filter]
        """

        self._filters = filters
