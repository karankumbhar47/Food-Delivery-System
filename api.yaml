openapi: 3.1.0
info:
    title: FDS
    description: |
        This API allows to communicate with FDS (Food Delivery System) server.
    version: 0.0.1
paths:
    # Registration and Authentication paths
    /register:
        post:
            summary: Register a new consumer?
            description: Create a new user account with unique username, strong password for authentication and other user info.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - username
                                - password
                                - phone
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
                                name:
                                    type: string
                                phone:
                                    type: number
                                email:
                                    type: string
                                gender:
                                    type: string
                                    enum:
                                        - Male
                                        - Female
                                        - Others
                                dob:
                                    type: string
                required: true
            response:
            "200":
                description: "OK"
                content:
                    application/json:
                        description: Return session id
                        schema:
                            type: string
                            minLength: 40
                            maxLength: 40
            "409":
                description: "Conflict"
                content:
                    application/json:
                        description: Return Conflict type
                        schema:
                            type: string
                            enum:
                                - Username
                                - Phone
                                - Email
                                - Password

    /login:
        post:
            summary: Login to user account
            description: Get username and password and authenticate the user.
                Returns sessionId for further requests
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - username
                                - password
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
                required: true
            response:
            "200":
                description: "OK"
                content:
                    application/json:
                        description: Return session id
                        schema:
                            type: string
                            minLength: 40
                            maxLength: 40
            "403":
                description: "Forbidden"
    /profile:
        get:
            summary:
            description: Get information about the another user from username
                if the current user is allowed to do so. Anyone can see
                information about all the Vendors, Delivery Persons and the
                user himself.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - username
                                - sessionId
                            properties:
                                username:
                                    type: string
                                sessionId:
                                    type: string
                                    minLength: 40
                                    maxLength: 40

                required: true
            response:
            "200":
                description: "OK"
                content:
                    application/json:
                        description: Return allowed fields of the user info
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                name:
                                    type: string
                                phone:
                                    type: number
                                email:
                                    type: string
                                gender:
                                    type: string
                                    enum:
                                        - Male
                                        - Female
                                        - Others
                                dob:
                                    type: string
            "401":
                description: "Unauthorized"
    /profile/update:
        post:
            summary:
            description: Update userinfo of the user.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - sessionId
                            properties:
                                sessionId:
                                    type: string
                                    minLength: 40
                                    maxLength: 40
                                name:
                                    type: string
                                phone:
                                    type: number
                                email:
                                    type: string
                                gender:
                                    type: string
                                    enum:
                                        - Male
                                        - Female
                                        - Others
                                dob:
                                    type: string
                required: true
            response:
            "200":
                description: "OK"
                content:
                    application/json:
                        description: Return the updated values
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                name:
                                    type: string
                                phone:
                                    type: number
                                email:
                                    type: string
                                gender:
                                    type: string
                                    enum:
                                        - Male
                                        - Female
                                        - Others
                                dob:
                                    type: string
            "401":
                description: "Unauthorized"

    /query:
        get:
            summary: Search for items
            description: Search for items based on search query and filters
                (Authentication is not necessary)
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                sessionId:
                                    type: string
                                    minLength: 40
                                    maxLength: 40
                                query:
                                    description: Can be empty
                                    type: string
                                    # maxLength: 150
                                filters:
                                    type: array
                                    items:
                                        type: object
                                        required:
                                            - property
                                            - constrainType
                                            - value
                                        properties:
                                            property:
                                                type: string
                                                description: What property to
                                                    apply filter on.
                                                enum:
                                                    - price
                                                    - veg
                                                    - rating
                                                    - vendor
                                                    - category # (rajasthani, punjabi, bihari, bangali, udpi, kolhapuri, etc)
                                            constrainType:
                                                type: string
                                                emun:
                                                    - greaterThan
                                                    - lessThan
                                                    - equals
                                                    - notEquals
                                            value:
                                                type: string
                required: true
            response:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            description: Return values
                            schema:
                                type: array
                                item:
                                    type: object
                                    properties:
                                        itemId:
                                            type: string
                                            minLength: 40
                                            maxLength: 40
                                        name:
                                            type: string
                                        thumbnail:
                                            type: string
                                        vendor:
                                            type: string
                                        price:
                                            type: number
                                        rating:
                                            type: number
                                        ratedBy:
                                            type: number
                "401":
                    description: "Unauthorized"

    /order/place:
        post:
            summary: Place the order
            description: Place the order from the cart, with item id as key and quantity as value.
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - sessionId
                                - itemCart
                                - location
                            properties:
                                sessionId:
                                    type: string
                                    minLength: 40
                                    maxLength: 40
                                itemCart:
                                    type: array
                                    items:
                                        type: object
                                        required:
                                            - itemId
                                            - quantity
                                        properties:
                                            itemId:
                                                type: string
                                                minLength: 40
                                                maxLength: 40
                                            quantity:
                                                type: number
                                                description: Quantity of the specific item.
                                location:
                                    type: string
                                    description: Delivery location.
                required: true
            response:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            description: Return orderId
                            schema:
                                type: string
                                minLength: 40
                                maxLength: 40

                "404":
                    description: "Not Found"

    /order/confirm:
        post:
            summary: Confirm Order
            description: Confirm Order Delivery
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - orderId
                                - sessionId
                            properties:
                                orderId:
                                    type: string
                                    minLength: 40
                                    maxLength: 40
                                sessionId:
                                    type: string
                                    minLength: 40
                                    maxLength: 40
                required: true
            response:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            description: Return OTP
                            schema:
                                type: number
                                minLength: 6
                                maxLength: 6

                "404":
                    description: "Not Found"

    /product/{id}:
        get:
            summary: Get Product Details
            description: Retrieve details for a specific item by providing its ID
            parameters:
                - name: id
                  in: path
                  description: ID of the item to retrieve details for
                  required: true
                  schema:
                  type: string
            responses:
            "200":
                description: OK
                content:
                application/json:
                    description: Return values
                    schema:
                    type: object
                    properties:
                        itemId:
                            type: string
                            description: ID of the item
                        itemName:
                            type: string
                            description: Name of the item
                        thumbnailPicture:
                            type: string
                            description: 64bit encoded thumbnail picture
                        price:
                            type: number
                            description: Price of the item
                        vendorName:
                            type: string
                            description: Name of the vendor
                        vendorLocation:
                            type: string
                            description: Location of the vendor
                        starRating:
                            type: number
                            description: Star rating of the item
                        isAvailable:
                            type: boolean
                            description: Indicates if the item is available
                        maxQuantity:
                            type: integer
                            description: Maximum quantity available
                        imageUrls:
                            type: array
                            description: URLs of additional images
                            items:
                                type: string
            "404":
                description: File Not Found

            "401":
                description: Unauthorized

    /product/{id}/available:
        get:
            summary: Check Availability
            description: Check the availability of a specific item by providing its ID and quantity count
            parameters:
                - name: id
                  in: path
                  description: ID of the item to check availability for
                  required: true
                  schema:
                  type: string
                - name: count
                  in: query
                  description: Quantity count to check availability for
                  required: true
                  schema:
                  type: integer
            responses:
            "200":
                description: OK
                content:
                application/json:
                    description: Availability status
                    schema:
                    type: object
                    properties:
                        isAvailable:
                        type: boolean
                        description: Indicates if the specified quantity is available
            "401":
                description: Unauthorized

    /file:
        get:
            summary: Get file by file ID
            description: Retrieve a file, typically an image, based on the provided file ID.
            parameters:
                - name: fileId
                  in: header
                  description: ID of the file to retrieve
                  required: true
                  schema:
                      type: string
                      minLength: 40
                      maxLength: 40
                - name: sessionId
                  in: header
                  required: false
                  schema:
                      type: string
                      minLength: 40
                      maxLength: 40
            responses:
                "200":
                    description: OK
                    content:
                        image/*:
                            schema:
                                type: string
                                contentMediaType: image/*
                                contentEncoding: base64
                                example: [binary file]
                "401":
                    description: "Unauthorized"
                "404":
                    description: "File Not Found"
        put:
            summary: Upload a file
            description: Upload an image to server for referencing elsewhere.
            parameters:
                - name: sessionId
                  in: header
                  required: true
                  schema:
                      type: string
                      minLength: 40
                      maxLength: 40
            requestBody:
                required: true
                content:
                    image/*:
                        schema:
                            type: string # Assuming a base64-encoded image string
                            format: binary
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            description: Return the unique file id of length 40
                            schema:
                                type: string
                                maxLength: 40;
                                minLength: 40;
                "401":
                    description: Unauthorized (if user not valid to upload file)

    /delivery/viewWaitingOrders:
        get:
            summary: View Waiting Orders
            parameters:
                -name: sessionId
                in: header
                description: Session ID of the delivery person
                required: true
                schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        orderId:
                                            type: string
                                        customerName:
                                            type: string
                                        deliveryAddress:
                                            type: string
                                        pickupLocation:
                                            type: string
                                        orderDetails:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    itemId:
                                                        type: string
                                                    itemName:
                                                        type: string
                                                    quantity:
                                                        type: integer
                                                    price:
                                                        type: number

    /delivery/acceptOrder:
        post:
            summary: Accept Order
            parameters:
                -name: sessionId
                in: header
                description: Session ID of the delivery person
                required: true
                schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                orderId:
                                    type: string
            responses:
                "200":
                    description: OK
                "401":
                    description: Unauthorized

    /delivery/getAcceptedOrders:
        get:
            summary: Get List of Accepted Orders
            parameters:
                -name: sessionId
                in: header
                description: Session ID of the delivery person
                required: true
                schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        orderId:
                                            type: string
                                        customerName:
                                            type: string
                                        deliveryAddress:
                                            type: string
                                        pickupLocation:
                                            type: string
                                        orderDetails:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    itemId:
                                                        type: string
                                                    itemName:
                                                        type: string
                                                    quantity:
                                                        type: integer
                                                    price:
                                                        type: number

    
    /delivery/pickupOrder:
        post:
            summary: Pickup Order
            parameters:
                - name: sessionId
                  in: header
                  description: Session ID of the delivery person
                  required: true
                  schema:
                      type: string
                - name: orderId
                  in: query
                  description: ID of the order to be picked up
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK
                '401':
                    description: Unauthorized

    /delivery/dropOrder:
        post:
            summary: Drop Order
            parameters:
                - name: sessionId
                  in: header
                  description: Session ID of the delivery person
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                orderId:
                                    type: string
                                otp:
                                    type: integer
                                    minLength: 6
                                    maxLength: 6
            responses:
                '200':
                    description: OK
                '401':
                    description: Unauthorized




#
# ## Generic template
#     /path:
#         post:
#             summary:
#             description:
#             requestBody:
#                 content:
#                     application/json:
#                         schema:
#                             type: object
#                             required:
#                                 - sessionId
#                             properties:
#                                 sessionId:
#                                     type: string
#                                     minLength: 40
#                                     maxLength: 40
#                                 # other props
#                 required: true
#             response:
#             "200":
#                 description: "OK"
#                 content:
#                     application/json:
#                         description: Return values
#                         schema:
#                             type: object
#                             properties:
#             "401":
#                 description: "Unauthorized"
